# Quarkus Development Configuration
# Based on ADR-0001: Inner Loop Development Architecture
# Research-validated performance targets: 95th percentile < 5 seconds live reload

# === Live Reload Configuration ===
# Enable live reload with optimized settings
quarkus.live-reload.enabled=true
quarkus.live-reload.instrumentation=true
quarkus.live-reload.watched-resources=src/main/java/**,src/main/resources/**

# Hot deployment optimization
quarkus.dev.instrumentation=true
quarkus.dev.remote-dev-url=http://localhost:8080

# === Performance Optimization ===
# JVM settings for faster startup and reload
quarkus.native.builder-image=registry.access.redhat.com/ubi8/openjdk-21:1.20

# Maven repository caching for faster startup
quarkus.maven.offline=false
quarkus.maven.local-repo-path=/home/user/.m2/repository

# === Database Configuration ===
# PostgreSQL connection with research-validated service discovery
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=attendee
quarkus.datasource.password=workshop
quarkus.datasource.jdbc.url=jdbc:postgresql://ddd-workshop-postgresql.ddd-workshop.svc.cluster.local:5432/conference

# Connection pool optimization for workshop environment
quarkus.datasource.jdbc.min-size=2
quarkus.datasource.jdbc.max-size=8
quarkus.datasource.jdbc.acquisition-timeout=PT30S

# === Kafka Configuration ===
# Event streaming with research-validated service discovery
kafka.bootstrap.servers=ddd-workshop-kafka.ddd-workshop.svc.cluster.local:9092
mp.messaging.connector.smallrye-kafka.bootstrap.servers=ddd-workshop-kafka.ddd-workshop.svc.cluster.local:9092

# Kafka producer optimization for workshop
mp.messaging.outgoing.events.connector=smallrye-kafka
mp.messaging.outgoing.events.topic=workshop-events
mp.messaging.outgoing.events.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka consumer optimization
mp.messaging.incoming.events.connector=smallrye-kafka
mp.messaging.incoming.events.topic=workshop-events
mp.messaging.incoming.events.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.events.group.id=workshop-group

# === HTTP Configuration ===
# Optimized for development environment
quarkus.http.host=0.0.0.0
quarkus.http.port=8080
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS

# Datasource
quarkus.datasource.db-kind=postgresql 
quarkus.datasource.username=quarkus
quarkus.datasource.password=quarkus
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus

#Kafka
kafka.bootstrap.servers=localhost:9092
mp.messaging.outgoing.attendees.connector=smallrye-kafka
mp.messaging.outgoing.attendees.topic=attendees
